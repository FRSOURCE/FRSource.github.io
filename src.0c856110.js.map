{"version":3,"sources":["../node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","../node_modules/domready/ready.js","logo.ctrl.ts","contactDialog.ctrl.ts","index.ts","../node_modules/parcel-bundler/src/builtins/bundle-url.js","../node_modules/parcel-bundler/src/builtins/bundle-loader.js","../node_modules/parcel-bundler/src/builtins/loaders/browser/html-loader.js"],"names":["index","MapShim","Map","getIndex","arr","key","result","some","entry","class_1","__entries__","Object","defineProperty","prototype","get","length","enumerable","configurable","set","value","push","delete","entries","splice","has","clear","forEach","callback","ctx","_i","_a","call","isBrowser","window","document","global$1","global","Math","self","Function","requestAnimationFrame$1","requestAnimationFrame","bind","setTimeout","Date","now","trailingTimeout","throttle","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","REFRESH_DELAY","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","addObserver","observer","indexOf","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","addEventListener","observe","attributes","childList","characterData","subtree","removeEventListener","disconnect","_b","propertyName","getInstance","instance_","defineConfigurable","target","props","keys","writable","getWindowOf","ownerGlobal","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","arguments","reduce","size","position","getPaddings","paddings","positions_1","getSVGContentRect","bbox","getBBox","width","height","getHTMLElementContentRect","clientWidth","clientHeight","getComputedStyle","horizPad","left","right","vertPad","top","bottom","boxSizing","round","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","documentElement","getContentRect","createReadOnlyRect","x","y","Constr","DOMRectReadOnly","rect","create","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","broadcastRect","ResizeObserverEntry","rectInit","contentRect","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","_this","observation","map","WeakMap","ResizeObserver","method","apply","bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","require","loadBundlesLazy","bundles","Array","isArray","id","Promise","resolve","code","LazyPromise","reject","loadBundles","slice","then","all","loadBundle","bundleLoaders","registerBundleLoader","type","loader","module","load","register","bundle","substring","lastIndexOf","toLowerCase","bundleLoader","resolved","catch","e","executor","promise","onSuccess","onError","fetch","res","text"],"mappings":"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","file":"src.0c856110.js","sourceRoot":"../src","sourcesContent":["/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof global !== 'undefined' && global.Math === Math) {\r\n        return global;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\nexport default index;\n","/*!\n  * domready (c) Dustin Diaz 2014 - License MIT\n  */\n!function (name, definition) {\n\n  if (typeof module != 'undefined') module.exports = definition()\n  else if (typeof define == 'function' && typeof define.amd == 'object') define(definition)\n  else this[name] = definition()\n\n}('domready', function () {\n\n  var fns = [], listener\n    , doc = document\n    , hack = doc.documentElement.doScroll\n    , domContentLoaded = 'DOMContentLoaded'\n    , loaded = (hack ? /^loaded|^c/ : /^loaded|^i|^c/).test(doc.readyState)\n\n\n  if (!loaded)\n  doc.addEventListener(domContentLoaded, listener = function () {\n    doc.removeEventListener(domContentLoaded, listener)\n    loaded = 1\n    while (listener = fns.shift()) listener()\n  })\n\n  return function (fn) {\n    loaded ? setTimeout(fn, 0) : fns.push(fn)\n  }\n\n});\n","export class LogoCtrl {\n    private static maxGlitchTime = 600;\n    private static dpi = window.devicePixelRatio;\n\n    private static randInt (a: number = 0, b: number = 1) { return Math.random() * (b - a) + a; }\n    private static randIntNormalDistributed (a: number = 0, b: number = 1) {\n        let u = 0, v = 0;\n        while(u === 0) u = Math.random(); //Converting [0,1) to (0,1)\n        while(v === 0) v = Math.random();\n        const num = Math.abs(Math.sqrt( -2.0 * Math.log( u ) ) * Math.cos( 2.0 * Math.PI * v )) + .1;\n        return (num > 3.8 ? 1 : (num > 1 ? num % 1 : (num > .1 && num < .4 ? num + Math.random() * .5 : (num < 0 ? 0 : num)))) * (b - a) + a;\n    }\n    private static asyncTimeout (timeout: number) {\n        return new Promise(resolve =>\n            setTimeout(resolve, timeout)\n        );\n    }\n\n    private lastVisibleItem = -1;\n\n    private resizeObserver = new window.ResizeObserver(this.onResize.bind(this));\n\n    private img: HTMLImageElement;\n    private ctx: CanvasRenderingContext2D;\n    private imgSize: {width: number; height: number};\n    private canvasSize: {width: number; height: number};\n\n    constructor (\n        public logo: SVGElement,\n        public canvas: HTMLCanvasElement,\n        public itemsToReveal: (HTMLElement | SVGElement)[],\n        public onFinish?: () => void\n    ) {\n        this.ctx = this.canvas.getContext('2d');\n        this.resizeObserver.observe(logo);\n        this.resizeObserver.observe(canvas);\n    }\n\n    private async onResize () {\n        await this.refreshSvgImage();\n        this.imgSize = this.logo.querySelector('g').getBoundingClientRect();\n        this.canvasSize = {width: this.canvas.offsetWidth, height: this.canvas.offsetHeight};\n        this.canvas.width = this.canvasSize.width * LogoCtrl.dpi;\n        this.canvas.height = this.canvasSize.height * LogoCtrl.dpi;\n        this.ctx.scale(LogoCtrl.dpi, LogoCtrl.dpi);\n    }\n\n    async init () {\n        await this.onResize();\n        \n        this.glitchTimeouted();\n        setTimeout(this.progressReveal.bind(this), 2500); // starting timeout\n    }\n\n    glitchImg () {\n        const imgWidth = this.imgSize.width * LogoCtrl.dpi;\n        const imgHeight = this.imgSize.height * LogoCtrl.dpi;\n        const canvasScale = Math.max(this.canvas.clientHeight/this.logo.clientHeight, this.canvas.clientWidth/this.logo.clientWidth);\n        if (Math.random() < .2) {\n            this.logo.style.visibility = 'hidden';\n        } else {\n            this.logo.style.visibility = null;\n            this.logo.style.transform = Math.random() < .7\n                ? `translate(${LogoCtrl.randIntNormalDistributed(-10, 10)}%, ${LogoCtrl.randIntNormalDistributed(-10, 10)}%)`\n                : 'none';\n        }\n\n        for (let i = 0; i < LogoCtrl.randInt(1, 13); ++i) {\n            const x = LogoCtrl.randIntNormalDistributed(0, 1);\n            const y = LogoCtrl.randIntNormalDistributed(0, 1);\n            const spliceWidth = LogoCtrl.randIntNormalDistributed(0, 1);\n            const spliceHeight = LogoCtrl.randIntNormalDistributed(0, 1);\n            // console.log(this.canvasSize.width, this.imgSize.width);\n\n            this.ctx.drawImage(\n                this.img,\n                x * imgWidth,\n                y * imgHeight,\n                spliceWidth * imgWidth * canvasScale,\n                spliceHeight * imgHeight * canvasScale,\n                LogoCtrl.randIntNormalDistributed(0, this.canvasSize.width - this.imgSize.width),\n                LogoCtrl.randIntNormalDistributed(0, this.canvasSize.height - this.imgSize.height),\n                // this.imgOffset.h + this.imgSize.h * y,\n                spliceWidth * this.imgSize.width,\n                spliceHeight * this.imgSize.height\n            );\n        }\n    }\n\n    async glitchTimeouted () {\n        this.logo.style.visibility = null;\n        await Promise.all(new Array(Math.round(LogoCtrl.randInt(.5, 3.4))).fill(0).map(async () => {\n            await LogoCtrl.asyncTimeout(LogoCtrl.randInt(550, 2500));\n            this.glitchImg();\n            await LogoCtrl.asyncTimeout(LogoCtrl.randInt(50, LogoCtrl.maxGlitchTime));\n        }));\n\n        this.ctx.clearRect(0, 0, this.canvasSize.width, this.canvasSize.height);\n        this.glitchTimeouted();\n    }\n\n    async progressReveal () {\n        if (this.lastVisibleItem === this.itemsToReveal.length - 1) {\n            return this.onFinish?.();\n        }\n\n        this.itemsToReveal[++this.lastVisibleItem].style.visibility = null;\n        await this.refreshSvgImage();\n        setTimeout(this.progressReveal.bind(this), LogoCtrl.randInt(200, 700));\n    }\n\n    async refreshSvgImage () {\n        const image = new Image();\n        const img = await new Promise<typeof image>(resolve => {\n            image.onload = resolve.bind(void 0, image);\n            const svgURL = new XMLSerializer().serializeToString(this.logo);\n            image.src = 'data:image/svg+xml; charset=utf8, ' + encodeURIComponent(svgURL);\n        });\n        return this.img = img;\n    }\n}\n","import tpl from './contactDialog.tpl.html';\n\nexport class ContactDialogCtrl {\n    static grecaptchaScriptLoader: Promise<HTMLElement>;\n\n    private grecaptchaCallbackResolver: (token: string)=> void = () => {};\n    element: HTMLDialogElement;\n\n    constructor () {\n        if (!ContactDialogCtrl.grecaptchaScriptLoader) this.createScriptElement();\n        this.element = document.createElement('dialog');\n        this.element.innerHTML = tpl;\n        this.element.querySelector('.dialog__btn-close').addEventListener('click', this.hide.bind(this));\n\n        this.element.querySelector<HTMLFormElement>('.gform').addEventListener('submit', this.onFormSubmit.bind(this))\n    }\n    \n    private createScriptElement () {\n        ContactDialogCtrl.grecaptchaScriptLoader = new Promise((resolve) => {\n            const script = document.createElement('script');\n            script.onload = () => {\n                const container = document.createElement('div');\n                container.className = 'grecaptcha-wrapper';\n                document.body.appendChild(container);\n                (window as any).grecaptcha.ready(() => {\n                    (window as any).grecaptcha.render(container, {\n                        sitekey: '6LdQaM8ZAAAAAJwBCtGEYIyh9u6be1rBOlsd-FWj',\n                        size: 'invisible',\n                        callback: (token) => this.grecaptchaCallbackResolver(token)\n                    });\n                    resolve();\n                });\n            };\n            script.src = 'https://www.google.com/recaptcha/api.js?render=explicit';\n            script.defer = true;\n            script.async = true;\n\n            document.body.appendChild(script);\n        });\n    }\n\n    private async executeGrecaptcha () {\n       const token = await new Promise<string>((resolve) => {\n            this.grecaptchaCallbackResolver = resolve;\n           (window as any).grecaptcha.execute();\n        });\n        (window as any).grecaptcha.reset();\n\n        return token;\n    }\n\n    isShown () {\n        return this.element.getAttribute('open') === 'open';\n    }\n\n    show() {\n        this.element.setAttribute('open', 'open');\n    }\n\n    hide() {\n        this.element.removeAttribute('open');\n    }\n\n    async onFormSubmit (e: Event) {\n        await ContactDialogCtrl.grecaptchaScriptLoader;\n\n        const form = e.currentTarget as HTMLFormElement;\n        form.querySelector('button').disabled = true;\n        e.preventDefault();\n\n        const url = 'https://script.google.com/macros/s/AKfycbzrISB5QwRuuwGTgkxgKp7DGENDHPcxZTcka2_LRQ0zULSf5Ec/exec?'\n            + Array.prototype.slice.apply(form.querySelectorAll('input,textarea'))\n                .map(el => encodeURIComponent(el.name) + '=' + encodeURIComponent(el.value))\n                .join('&');\n\n        const token = await this.executeGrecaptcha();\n        const req = new XMLHttpRequest();\n        req.open('POST', url + '&token=' + encodeURIComponent(token));\n        req.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        req.onreadystatechange = () => {\n\n        if(req.readyState === 4 && req.status === 200) {\n                form.querySelector('button').disabled = false;\n            }\n        }\n        req.send();\n    }\n}\n","import type ResizeObserverType from 'resize-observer-polyfill';\nimport './index.scss';\nimport type { ContactDialogCtrl } from './contactDialog.ctrl';\nimport type domready from 'domready';\n\ndeclare global {\n    interface Window {\n        ResizeObserver: typeof ResizeObserverType;\n    }\n}\n\n(async () => {\n    if (!window.ResizeObserver) {\n        const {default: ResizeObserver} = await import('resize-observer-polyfill')\n        window.ResizeObserver = ResizeObserver as unknown as typeof ResizeObserverType\n    }\n\n    if (!matchMedia('(prefers-reduced-motion: reduce)').matches) {\n        const loadEls = document.body.querySelectorAll('.load-fadeinup');\n\n        ((await import('domready')).default as typeof domready)(() => {\n            setTimeout(() => \n                loadEls.forEach((el, i) => {\n                    setTimeout(() =>  el.classList.add('in'), 300 * i);\n                }),\n                5500\n            );\n        });\n\n        import('./logo.ctrl').then(({LogoCtrl}) => {\n            const logo = document.querySelector<SVGSVGElement>('.icon-logomark');\n            const logoWrapper = logo.parentElement;\n            const logoText = logo.querySelector<SVGSVGElement>('use');\n            const paths = Array.from(logo.querySelectorAll<HTMLElement | SVGElement>('path'));\n            const canvas = document.createElement('canvas');\n            canvas.className = 'icon-logomark icon-logomark--canvas';\n            logoWrapper.appendChild(canvas);\n\n            paths.push(logoText);\n            paths.forEach(path => path.style.visibility = 'hidden');\n            logoWrapper.style.display = 'flex';\n            \n            new LogoCtrl(\n                logo,\n                canvas,\n                paths\n            ).init();\n        });\n    }\n\n    let contactDialogCtrl: ContactDialogCtrl; \n\n    document.body.querySelector('button').addEventListener('click', async () => {\n        if (!contactDialogCtrl) {\n            const {ContactDialogCtrl} = await import('./contactDialog.ctrl');\n            contactDialogCtrl = new ContactDialogCtrl();\n            document.body.querySelector('.content').insertAdjacentElement('afterbegin', contactDialogCtrl.element);\n        }\n\n        contactDialogCtrl.isShown\n            ? contactDialogCtrl.show()\n            : contactDialogCtrl.hide();\n    });\n})();\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var getBundleURL = require('./bundle-url').getBundleURL;\n\nfunction loadBundlesLazy(bundles) {\n  if (!Array.isArray(bundles)) {\n    bundles = [bundles]\n  }\n\n  var id = bundles[bundles.length - 1];\n\n  try {\n    return Promise.resolve(require(id));\n  } catch (err) {\n    if (err.code === 'MODULE_NOT_FOUND') {\n      return new LazyPromise(function (resolve, reject) {\n        loadBundles(bundles.slice(0, -1))\n          .then(function () {\n            return require(id);\n          })\n          .then(resolve, reject);\n      });\n    }\n\n    throw err;\n  }\n}\n\nfunction loadBundles(bundles) {\n  return Promise.all(bundles.map(loadBundle));\n}\n\nvar bundleLoaders = {};\nfunction registerBundleLoader(type, loader) {\n  bundleLoaders[type] = loader;\n}\n\nmodule.exports = exports = loadBundlesLazy;\nexports.load = loadBundles;\nexports.register = registerBundleLoader;\n\nvar bundles = {};\nfunction loadBundle(bundle) {\n  var id;\n  if (Array.isArray(bundle)) {\n    id = bundle[1];\n    bundle = bundle[0];\n  }\n\n  if (bundles[bundle]) {\n    return bundles[bundle];\n  }\n\n  var type = (bundle.substring(bundle.lastIndexOf('.') + 1, bundle.length) || bundle).toLowerCase();\n  var bundleLoader = bundleLoaders[type];\n  if (bundleLoader) {\n    return bundles[bundle] = bundleLoader(getBundleURL() + bundle)\n      .then(function (resolved) {\n        if (resolved) {\n          module.bundle.register(id, resolved);\n        }\n\n        return resolved;\n      }).catch(function(e) {\n        delete bundles[bundle];\n        \n        throw e;\n      });\n  }\n}\n\nfunction LazyPromise(executor) {\n  this.executor = executor;\n  this.promise = null;\n}\n\nLazyPromise.prototype.then = function (onSuccess, onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.then(onSuccess, onError)\n};\n\nLazyPromise.prototype.catch = function (onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.catch(onError)\n};\n","module.exports = function loadHTMLBundle(bundle) {\n  return fetch(bundle).then(function (res) {\n    return res.text();\n  });\n};\n"]}