{"mappings":"moCAAA,IAAAA,EAAAC,EAAA,yEAGAD,EAAAE,OAAAC,EAAA,qBAAA,IAAaC,2EAHbC,EAAAJ,EAAA,wCACAA,EAAA,kBAEO,MAAMG,EAaTE,4BACIC,KAAKC,QAAUC,SAASC,cAAc,UAEjCN,EAAkBO,iBAAgBP,EAAkBO,eAAiBC,MAAMC,EAAAC,UAChF,MAAMC,QAAoBX,EAAkBO,eAE5CJ,KAAKC,QAAQQ,gBAAkBD,EAAYE,OAC3CV,KAAKC,QAAQU,iBAAiB,kBAAkBC,SAAQC,IACpDA,EAAQC,aAAa,cAAe,QAExCd,KAAKC,QAAQc,cAAc,sBAAsBC,iBAAiB,QAAShB,KAAKiB,KAAKC,KAAKlB,OAE1FA,KAAKC,QAAQc,cAA+B,UAAUC,iBAAiB,SAAUhB,KAAKmB,aAAaD,KAAKlB,OAGpGD,sBACJF,EAAkBuB,uBAAyB,IAAIC,SAAeC,IAC1D,MAAMC,EAASrB,SAASC,cAAc,UACtCoB,EAAOC,OAAS,KACZ,MAAMC,EAAYvB,SAASC,cAAc,OACzCsB,EAAUC,UAAY,qBACtBxB,SAASyB,KAAKC,YAAYH,GACzBI,OAAeC,WAAWC,OAAM,KAC5BF,OAAeC,WAAWE,OAAOP,EAAW,CACzCQ,QAAS,2CACTC,KAAM,YACNC,SAAWC,GAAUpC,KAAKqC,2BAA2BD,KAEzDd,QAGRC,EAAOe,IAAM,0DACbf,EAAOgB,OAAQ,EACfhB,EAAOiB,OAAQ,EAEftC,SAASyB,KAAKC,YAAYL,MAIlCxB,0BACG,MAAMqC,QAAc,IAAIf,SAAiBC,IACpCtB,KAAKqC,2BAA6Bf,EAClCO,OAAeC,WAAWW,aAI9B,OAFCZ,OAAeC,WAAWY,QAEpBN,EAGXrC,sBAA+B4C,EAAcC,EAAU,GACnD,OAAO,IAAIvB,SAAcmB,MAAOlB,EAASuB,KACrC,MAAMC,EAAM,mGAAqGH,EAE3GP,QAAcpC,KAAK+C,oBACnBC,EAAM,IAAIC,eAChBD,EAAIE,KAAK,OAAQJ,EAAM,UAAYK,mBAAmBf,IACtDY,EAAII,iBAAiB,eAAgB,4BACrCJ,EAAIK,mBAAqB,KACrB,GAAsB,IAAnBL,EAAIM,WACH,GAAmB,MAAfN,EAAIO,OAAgB,CAEpB,GAAmB,YADPC,KAAKC,MAAMT,EAAIU,cACnBC,OAAsB,OAAOrC,MAC1BsB,EAAU,EAAGtB,EAAQtB,KAAK4D,gBAAgBjB,EAAMC,IACtDC,SACFA,KAGfG,EAAIa,UAIZ9D,UACI,MAA6C,SAAtCC,KAAKC,QAAQ6D,aAAa,QAGrC/D,OACIC,KAAKC,QAAQa,aAAa,OAAQ,QAGtCf,OACIC,KAAKC,QAAQ8D,gBAAgB,QAGjChE,mBAAoBiE,SACVnE,EAAkBuB,uBAExB,MAAM6C,EAAOD,EAAEE,cACTC,EAASF,EAAKlD,cAAc,UAClCoD,EAAOC,UAAW,EAClBJ,EAAEK,iBAEF,MAAMvB,EAAMwB,MAAMC,UAAUC,MAAMC,MAAMR,EAAKtD,iBAAiB,mBACrD+D,KACIC,GACDxB,mBAAmBwB,EAAGC,MAAQ,IAAMzB,mBAAmBwB,EAAGE,SAE7DC,KAAK,WAER9E,KAAK4D,gBAAgBd,GAAKiC,MAC5B,KACIZ,EAAOa,YAAc,OACrBb,EAAOc,UAAUC,OAAO,QACxBf,EAAOc,UAAUE,IAAI,WAEzB,SAEJhB,EAAOC,UAAW,EAhHtBrE,eAHA,EAAAqF,EAAA7E,SAAAP,KAAQ,8BAAqD,SAIpDH,EAAkBuB,wBAAwBpB,KAAKqF,sBAEpDrF,KAAKsF,8MCbbC,EAAO3F,QAAUF,EAAQ,wBAAwB8F,aAAa,SAAW9F,EAAQ,6BAA6B4B,QAAQ","sources":["src/contactDialog/index.ts","node_modules/@parcel/runtime-js/lib/runtime-eb1c8245f2fdf81f.js"],"sourcesContent":["import tplUrl from 'url:./tpl.html';\nimport './_styles.scss';\n\nexport class ContactDialogCtrl {\n    static grecaptchaScriptLoader: Promise<void>;\n    static templateLoader: Promise<Response>\n\n    private grecaptchaCallbackResolver: (token: string)=> void = () => {};\n    element: HTMLDialogElement;\n\n    constructor () {\n        if (!ContactDialogCtrl.grecaptchaScriptLoader) this.createScriptElement();\n\n        this.createDialogElement();\n    }\n\n    private async createDialogElement () {\n        this.element = document.createElement('dialog');\n        \n        if (!ContactDialogCtrl.templateLoader) ContactDialogCtrl.templateLoader = fetch(tplUrl);\n        const tplResponse = await ContactDialogCtrl.templateLoader;\n        \n        this.element.innerHTML = await tplResponse.text();\n        this.element.querySelectorAll('input,textarea').forEach(inputEl => {\n            inputEl.setAttribute('placeholder', ' '); // to let 'placeholder-shown' styling to kick in\n        });\n        this.element.querySelector('.dialog__btn-close').addEventListener('click', this.hide.bind(this));\n\n        this.element.querySelector<HTMLFormElement>('.gform').addEventListener('submit', this.onFormSubmit.bind(this))\n    }\n    \n    private createScriptElement () {\n        ContactDialogCtrl.grecaptchaScriptLoader = new Promise<void>((resolve) => {\n            const script = document.createElement('script');\n            script.onload = () => {\n                const container = document.createElement('div');\n                container.className = 'grecaptcha-wrapper';\n                document.body.appendChild(container);\n                (window as any).grecaptcha.ready(() => {\n                    (window as any).grecaptcha.render(container, {\n                        sitekey: '6LdQaM8ZAAAAAJwBCtGEYIyh9u6be1rBOlsd-FWj',\n                        size: 'invisible',\n                        callback: (token) => this.grecaptchaCallbackResolver(token)\n                    });\n                    resolve();\n                });\n            };\n            script.src = 'https://www.google.com/recaptcha/api.js?render=explicit';\n            script.defer = true;\n            script.async = true;\n\n            document.body.appendChild(script);\n        });\n    }\n\n    private async executeGrecaptcha () {\n       const token = await new Promise<string>((resolve) => {\n            this.grecaptchaCallbackResolver = resolve;\n           (window as any).grecaptcha.execute();\n        });\n        (window as any).grecaptcha.reset();\n\n        return token;\n    }\n\n    private async sendContactData (data: string, attempt = 0) {\n        return new Promise<void>(async (resolve, reject) => {\n            const url = 'https://script.google.com/macros/s/AKfycbzrISB5QwRuuwGTgkxgKp7DGENDHPcxZTcka2_LRQ0zULSf5Ec/exec?' + data;\n\n            const token = await this.executeGrecaptcha();\n            const req = new XMLHttpRequest();\n            req.open('POST', url + '&token=' + encodeURIComponent(token));\n            req.setRequestHeader('Content-type', 'text/plain;charset=utf-8');\n            req.onreadystatechange = () => {\n                if(req.readyState === 4) {\n                    if (req.status === 200) {\n                        const res = JSON.parse(req.responseText);\n                        if (res.result === 'success') return resolve();\n                        else if (++attempt < 3) resolve(this.sendContactData(data, attempt))\n                        else reject();\n                    } else reject();\n                }\n            }\n            req.send();\n        });\n    }\n\n    isShown () {\n        return this.element.getAttribute('open') === 'open';\n    }\n\n    show() {\n        this.element.setAttribute('open', 'open');\n    }\n\n    hide() {\n        this.element.removeAttribute('open');\n    }\n\n    async onFormSubmit (e: Event) {\n        await ContactDialogCtrl.grecaptchaScriptLoader;\n\n        const form = e.currentTarget as HTMLFormElement;\n        const button = form.querySelector('button');\n        button.disabled = true;\n        e.preventDefault();\n\n        const url = Array.prototype.slice.apply(form.querySelectorAll('input,textarea'))\n                .map(\n                    (el: HTMLInputElement | HTMLTextAreaElement) =>\n                    encodeURIComponent(el.name) + '=' + encodeURIComponent(el.value)\n                )\n                .join('&');\n\n        await this.sendContactData(url).then(\n            () => {\n                button.textContent = 'THX!';\n                button.classList.remove('fill');\n                button.classList.add('pe-n');\n            },\n            () => {}\n        );\n        button.disabled = false;\n    }\n}\n","module.exports = require('./helpers/bundle-url').getBundleURL('dccJ2') + require('./helpers/bundle-manifest').resolve(\"jr3bn\");"],"names":["parcelHelpers","require","export","exports","ContactDialogCtrl","_tplHtml","[object Object]","this","element","document","createElement","templateLoader","fetch","_tplHtmlDefault","default","tplResponse","innerHTML","text","querySelectorAll","forEach","inputEl","setAttribute","querySelector","addEventListener","hide","bind","onFormSubmit","grecaptchaScriptLoader","Promise","resolve","script","onload","container","className","body","appendChild","window","grecaptcha","ready","render","sitekey","size","callback","token","grecaptchaCallbackResolver","src","defer","async","execute","reset","data","attempt","reject","url","executeGrecaptcha","req","XMLHttpRequest","open","encodeURIComponent","setRequestHeader","onreadystatechange","readyState","status","JSON","parse","responseText","result","sendContactData","send","getAttribute","removeAttribute","e","form","currentTarget","button","disabled","preventDefault","Array","prototype","slice","apply","map","el","name","value","join","then","textContent","classList","remove","add","_definePropertyMjsDefault","createScriptElement","createDialogElement","module","getBundleURL"],"version":3,"file":"contactDialog.05348b4e.js.map"}