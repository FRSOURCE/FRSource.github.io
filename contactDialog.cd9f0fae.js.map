{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,I,C,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,C,E,C,M,C,S,C,C,C,C,C,E,I,E,E,kD,E,iB,C,GCGA,EAAA,MAAA,CAAA,EAAA,oBAAA,IAAa,GAHb,IAAA,EAAA,EAAA,kB,E,E,c,C,GACA,EAAA,iBAEO,OAAM,EAOT,aAAc,CAHN,IAAA,CAAA,0BAAA,CAAsD,KAAO,EAI5D,EAAkB,sBAAsB,EACzC,IAAI,CAAC,mBAAmB,GAE5B,IAAI,CAAC,OAAO,CAAG,SAAS,aAAa,CAAC,UACtC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,CACxC,CAEA,MAAc,mBAAmB,CAA0B,CAAE,CACpD,EAAkB,cAAc,EACjC,CAAA,EAAkB,cAAc,CAAG,MAAM,EAAA,OAAK,CADlD,EAEA,IAAM,EAAc,MAAM,EAAkB,cAAc,AAE1D,CAAA,EAAQ,SAAS,CAAG,MAAM,EAAY,IAAI,GAC1C,EAAQ,gBAAgB,CAAC,kBAAkB,OAAO,CAAC,AAAC,IAChD,EAAQ,YAAY,CAAC,cAAe,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","sources":["<anon>","src/contactDialog/index.ts","../../node_modules/.pnpm/@parcel+runtime-js@2.12.0_@parcel+core@2.12.0_@swc+helpers@0.5.1__@swc+helpers@0.5.1/node_modules/@parcel/runtime-js/lib/runtime-bae26845c69ed8a9.js"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        this\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"asAuK\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"ContactDialogCtrl\", ()=>ContactDialogCtrl);\nvar _tplHtml = require(\"url:./tpl.html\");\nvar _tplHtmlDefault = parcelHelpers.interopDefault(_tplHtml);\nvar _stylesScss = require(\"./_styles.scss\");\nclass ContactDialogCtrl {\n    constructor(){\n        this.grecaptchaCallbackResolver = ()=>{};\n        if (!ContactDialogCtrl.grecaptchaScriptLoader) this.createScriptElement();\n        this.element = document.createElement(\"dialog\");\n        this.setupDialogElement(this.element);\n    }\n    async setupDialogElement(element) {\n        if (!ContactDialogCtrl.templateLoader) ContactDialogCtrl.templateLoader = fetch((0, _tplHtmlDefault.default));\n        const tplResponse = await ContactDialogCtrl.templateLoader;\n        element.innerHTML = await tplResponse.text();\n        element.querySelectorAll(\"input,textarea\").forEach((inputEl)=>{\n            inputEl.setAttribute(\"placeholder\", \" \"); // to let 'placeholder-shown' styling to kick in\n        });\n        element.querySelector(\".dialog__btn-close\").addEventListener(\"click\", this.hide.bind(this));\n        element.querySelector(\".gform\").addEventListener(\"submit\", this.onFormSubmit.bind(this));\n        this.element = element;\n    }\n    createScriptElement() {\n        ContactDialogCtrl.grecaptchaScriptLoader = new Promise((resolve)=>{\n            const script = document.createElement(\"script\");\n            script.onload = ()=>{\n                const container = document.createElement(\"div\");\n                container.className = \"grecaptcha-wrapper\";\n                document.body.appendChild(container);\n                window.grecaptcha.ready(()=>{\n                    window.grecaptcha.render(container, {\n                        sitekey: \"6LdQaM8ZAAAAAJwBCtGEYIyh9u6be1rBOlsd-FWj\",\n                        size: \"invisible\",\n                        callback: (token)=>this.grecaptchaCallbackResolver(token)\n                    });\n                    resolve();\n                });\n            };\n            script.src = \"https://www.google.com/recaptcha/api.js?render=explicit\";\n            script.defer = true;\n            script.async = true;\n            document.body.appendChild(script);\n        });\n    }\n    async executeGrecaptcha() {\n        const token = await new Promise((resolve)=>{\n            this.grecaptchaCallbackResolver = resolve;\n            window.grecaptcha.execute();\n        });\n        window.grecaptcha.reset();\n        return token;\n    }\n    async sendContactData(data, attempt = 0) {\n        return new Promise(async (resolve, reject)=>{\n            const url = \"https://script.google.com/macros/s/AKfycbzrISB5QwRuuwGTgkxgKp7DGENDHPcxZTcka2_LRQ0zULSf5Ec/exec?\" + data;\n            const token = await this.executeGrecaptcha();\n            const req = new XMLHttpRequest();\n            req.open(\"POST\", url + \"&token=\" + encodeURIComponent(token));\n            req.setRequestHeader(\"Content-type\", \"text/plain;charset=utf-8\");\n            req.onreadystatechange = ()=>{\n                if (req.readyState === 4) {\n                    if (req.status === 200) {\n                        const res = JSON.parse(req.responseText);\n                        if (res.result === \"success\") return resolve();\n                        else if (++attempt < 3) resolve(this.sendContactData(data, attempt));\n                        else reject();\n                    } else reject();\n                }\n            };\n            req.send();\n        });\n    }\n    isShown() {\n        return this.element.getAttribute(\"open\") === \"open\";\n    }\n    show() {\n        requestAnimationFrame(()=>{\n            this.element.setAttribute(\"open\", \"open\");\n        });\n    }\n    hide() {\n        this.element.removeAttribute(\"open\");\n    }\n    async onFormSubmit(e) {\n        await ContactDialogCtrl.grecaptchaScriptLoader;\n        const form = e.currentTarget;\n        const button = form.querySelector(\"button\");\n        button.disabled = true;\n        e.preventDefault();\n        const url = Array.prototype.slice.apply(form.querySelectorAll(\"input,textarea\")).map((el)=>encodeURIComponent(el.name) + \"=\" + encodeURIComponent(el.value)).join(\"&\");\n        await this.sendContactData(url).then(()=>{\n            button.textContent = \"THX!\";\n            button.classList.remove(\"fill\");\n            button.classList.add(\"pe-n\");\n        }, ()=>{});\n        button.disabled = false;\n    }\n}\n\n},{\"url:./tpl.html\":\"XBhYi\",\"./_styles.scss\":\"8QASm\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"g7f4C\"}],\"XBhYi\":[function(require,module,exports) {\nmodule.exports = require(\"cc3a1c5e26fb5606\").getBundleURL(\"iGomz\") + \"tpl.7f3037e4.html\";\n\n},{\"cc3a1c5e26fb5606\":\"6fsuZ\"}],\"8QASm\":[function() {},{}]},[], null, \"parcelRequire6566\")\n\n//# sourceMappingURL=contactDialog.cd9f0fae.js.map\n","import tplUrl from \"url:./tpl.html\";\nimport \"./_styles.scss\";\n\nexport class ContactDialogCtrl {\n    static grecaptchaScriptLoader: Promise<void>;\n    static templateLoader: Promise<Response>;\n\n    private grecaptchaCallbackResolver: (token: string) => void = () => {};\n    element: HTMLDialogElement;\n\n    constructor() {\n        if (!ContactDialogCtrl.grecaptchaScriptLoader)\n            this.createScriptElement();\n\n        this.element = document.createElement(\"dialog\");\n        this.setupDialogElement(this.element);\n    }\n\n    private async setupDialogElement(element: HTMLDialogElement) {\n        if (!ContactDialogCtrl.templateLoader)\n            ContactDialogCtrl.templateLoader = fetch(tplUrl);\n        const tplResponse = await ContactDialogCtrl.templateLoader;\n\n        element.innerHTML = await tplResponse.text();\n        element.querySelectorAll(\"input,textarea\").forEach((inputEl) => {\n            inputEl.setAttribute(\"placeholder\", \" \"); // to let 'placeholder-shown' styling to kick in\n        });\n        element\n            .querySelector(\".dialog__btn-close\")!\n            .addEventListener(\"click\", this.hide.bind(this));\n\n        element\n            .querySelector<HTMLFormElement>(\".gform\")!\n            .addEventListener(\"submit\", this.onFormSubmit.bind(this));\n\n        this.element = element;\n    }\n\n    private createScriptElement() {\n        ContactDialogCtrl.grecaptchaScriptLoader = new Promise<void>(\n            (resolve) => {\n                const script = document.createElement(\"script\");\n                script.onload = () => {\n                    const container = document.createElement(\"div\");\n                    container.className = \"grecaptcha-wrapper\";\n                    document.body.appendChild(container);\n                    (window as any).grecaptcha.ready(() => {\n                        (window as any).grecaptcha.render(container, {\n                            sitekey: \"6LdQaM8ZAAAAAJwBCtGEYIyh9u6be1rBOlsd-FWj\",\n                            size: \"invisible\",\n                            callback: (token: string) =>\n                                this.grecaptchaCallbackResolver(token),\n                        });\n                        resolve();\n                    });\n                };\n                script.src =\n                    \"https://www.google.com/recaptcha/api.js?render=explicit\";\n                script.defer = true;\n                script.async = true;\n\n                document.body.appendChild(script);\n            },\n        );\n    }\n\n    private async executeGrecaptcha() {\n        const token = await new Promise<string>((resolve) => {\n            this.grecaptchaCallbackResolver = resolve;\n            (window as any).grecaptcha.execute();\n        });\n        (window as any).grecaptcha.reset();\n\n        return token;\n    }\n\n    private async sendContactData(data: string, attempt = 0) {\n        return new Promise<void>(async (resolve, reject) => {\n            const url =\n                \"https://script.google.com/macros/s/AKfycbzrISB5QwRuuwGTgkxgKp7DGENDHPcxZTcka2_LRQ0zULSf5Ec/exec?\" +\n                data;\n\n            const token = await this.executeGrecaptcha();\n            const req = new XMLHttpRequest();\n            req.open(\"POST\", url + \"&token=\" + encodeURIComponent(token));\n            req.setRequestHeader(\"Content-type\", \"text/plain;charset=utf-8\");\n            req.onreadystatechange = () => {\n                if (req.readyState === 4) {\n                    if (req.status === 200) {\n                        const res = JSON.parse(req.responseText);\n                        if (res.result === \"success\") return resolve();\n                        else if (++attempt < 3)\n                            resolve(this.sendContactData(data, attempt));\n                        else reject();\n                    } else reject();\n                }\n            };\n            req.send();\n        });\n    }\n\n    isShown() {\n        return this.element.getAttribute(\"open\") === \"open\";\n    }\n\n    show() {\n        requestAnimationFrame(() => {\n            this.element.setAttribute(\"open\", \"open\");\n        });\n    }\n\n    hide() {\n        this.element.removeAttribute(\"open\");\n    }\n\n    async onFormSubmit(e: Event) {\n        await ContactDialogCtrl.grecaptchaScriptLoader;\n\n        const form = e.currentTarget as HTMLFormElement;\n        const button = form.querySelector(\"button\")!;\n        button.disabled = true;\n        e.preventDefault();\n\n        const url = Array.prototype.slice\n            .apply(form.querySelectorAll(\"input,textarea\"))\n            .map(\n                (el: HTMLInputElement | HTMLTextAreaElement) =>\n                    encodeURIComponent(el.name) +\n                    \"=\" +\n                    encodeURIComponent(el.value),\n            )\n            .join(\"&\");\n\n        await this.sendContactData(url).then(\n            () => {\n                button.textContent = \"THX!\";\n                button.classList.remove(\"fill\");\n                button.classList.add(\"pe-n\");\n            },\n            () => {},\n        );\n        button.disabled = false;\n    }\n}\n","module.exports = require('./helpers/bundle-url').getBundleURL('iGomz') + \"tpl.7f3037e4.html\";"],"names":["modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","i","length","parcelHelpers","defineInteropFlag","export","ContactDialogCtrl","_tplHtml","_tplHtmlDefault","interopDefault","constructor","grecaptchaCallbackResolver","grecaptchaScriptLoader","createScriptElement","element","document","createElement","setupDialogElement","templateLoader","fetch","default","tplResponse","innerHTML","text","querySelectorAll","forEach","inputEl","setAttribute","querySelector","addEventListener","hide","onFormSubmit","Promise","script","onload","container","className","body","appendChild","grecaptcha","ready","render","sitekey","size","callback","token","src","defer","async","executeGrecaptcha","execute","reset","sendContactData","data","attempt","reject","url","req","XMLHttpRequest","open","encodeURIComponent","setRequestHeader","onreadystatechange","readyState","status","JSON","parse","responseText","result","send","isShown","getAttribute","show","requestAnimationFrame","removeAttribute","e","form","currentTarget","button","disabled","preventDefault","Array","prototype","slice","apply","map","el","value","join","then","textContent","classList","remove","add","getBundleURL"],"version":3,"file":"contactDialog.cd9f0fae.js.map"}