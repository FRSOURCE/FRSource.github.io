@use 'sass:map';

@use '../common/styles/variables';

dialog {
    position: absolute;
    z-index: 1;
    top: map.get(variables.$spacings, 1);
    right: 0;
    bottom: -(map.get(variables.$spacings, 2));
    left: 0;
    overflow: visible;
    margin: 0;
    border: 0;
    padding: 0;
    display: flex;
    flex-flow: column;
    width: auto;
    height: auto;
    font: inherit;
    color: inherit;
    background: none;
    pointer-events: none;
    opacity: 0;
    transition: 0.2s opacity ease-in-out;

    @media (orientation:landscape) and (min-width: #{variables.$breakpoint3}) {
        top: 7vh;
        right: auto;
        bottom: 7vh;
        left: -1px;
        width: 31.3vw;
        max-width: 800px;
    }

    &[open] {
        pointer-events: all;
        opacity: 1;
    }

    &::before {
        content: '';
        position: absolute;
        top: 4vh;
        right: -2vh;
        bottom: -2vh;
        left: 4vh;
        z-index: -1;
        display: block;
        @include variables.gradBg;
        filter: blur(2vh);

        @media (orientation: landscape) {
            top: 3.4vw;
            right: -1.5vw;
            bottom: -1.5vw;
            left: 3.4vw;
            filter: blur(2.5vw);
        }
    }
}

.dialog {
    &__body {
        background: variables.$colorPrimaryInverted;
        flex-grow: 1;
        padding: (
                map.get(variables.$spacings, 1) +
                    map.get(variables.$spacings, 6)
            )
            map.get(variables.$spacings, 4) map.get(variables.$spacings, 4);

        @media (orientation:landscape) and (min-width: #{variables.$breakpoint3}) {
            padding-bottom: map.get(variables.$spacings, 6);
        }

        @media (orientation:landscape) and (min-width: #{variables.$breakpoint5}) {
            padding: (
                    map.get(variables.$spacings, 7) +
                        map.get(variables.$spacings, 3)
                )
                map.get(variables.$spacings, 7)
                (
                    map.get(variables.$spacings, 7) +
                        map.get(variables.$spacings, 1)
                );
        }

        @media (prefers-color-scheme: dark) {
            body:not(.t-light) & {
                background: variables.$darkModeBg;
            }
        }

        body.t-dark & {
            background: variables.$darkModeBg;
        }
    }

    &__btn-close {
        position: absolute;
        font-size: 30px;
        transform: translate(-50%, -50%) rotate(180deg);
    }
}
