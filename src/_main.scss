@use "sass:map";

@import "./variables";

body, html {
    height: 100%;
    width: 100%;
    margin: 0;
}

html {
    overflow: hidden;
    font-size: 100%;
    -webkit-text-size-adjust: 100%;
    font-variant-ligatures: none;
    -webkit-font-variant-ligatures: none;
    text-rendering: optimizeLegibility;
    -moz-osx-font-smoothing: grayscale;
    font-smoothing: antialiased;
    -webkit-font-smoothing: antialiased;
    text-shadow: rgba(0, 0, 0, .01) 0 0 1px;
    color: $colorPrimary;
}

body {
    overflow: hidden;
    position: relative;
    box-sizing: border-box;
    padding: map.get($spacings, 3);
    font-family: 'Share Tech Mono', monospace;
    font-size: map.get($fontSizes, 4);
    letter-spacing: .1em;
    line-height: $lineHeight3;

    @media (min-width: #{$breakpoint3}) {
        padding: 5.55vh;
    }

    @media (min-width: #{$breakpoint5}) {
        font-size: map.get($fontSizes, 7);
    }
}

dialog {
    position: absolute;
    z-index: 1;
    top: map.get($spacings, 1);
    right: 0;
    bottom: -(map.get($spacings, 2));
    left: 0;
    overflow: visible;
    margin: 0;
    border: 0;
    padding: 0;
    display: none;
    flex-flow: column;
    width: auto;
    height: auto;
    font: inherit;
    color: inherit;
    background: none;

    @media (min-width: #{$breakpoint3}) {
        top: 7vh;
        right: auto;
        bottom: 7vh;
        left: -1px;
        width: 31.3vw;
        max-width: 800px;
    }

    &[open] {
        display: flex;
    }

    &::before {
        content: "";
        position: absolute;
        top: 4vh;
        right: -2vh;
        bottom: -2vh;
        left: 4vh;
        z-index: -1;
        display: block;
        @extend .bgc-grad;
        filter: blur(2vh);

        @media (orientation: landscape) {
            top: 3vw;
            right: -1.5vw;
            bottom: -1.5vw;
            left: 3vw;
            filter: blur(3vw);
        }
    }
}

.dialog {
    &__body {
        background: $colorPrimaryInverted;
        flex-grow: 1;
        padding: (map.get($spacings, 1) + map.get($spacings, 6)) map.get($spacings, 4) map.get($spacings, 4);
        
        @media (min-width: #{$breakpoint3}) {
            padding-bottom: map.get($spacings, 6);
        }

        @media (min-width: #{$breakpoint5}) {
            padding: (map.get($spacings, 7) + map.get($spacings, 3)) map.get($spacings, 7)  (map.get($spacings, 7) + map.get($spacings, 1));
        }
    }

    &__btn-close {
        position: absolute;
        font-size: 30px;
        transform: translate(-50%, -50%) rotate(180deg);
    }
}

main {
    display: flex;
    flex-flow: column;
    overflow: auto;
    box-sizing: border-box;
    padding: map.get($spacings, 3) map.get($spacings, 4) map.get($spacings, 6);
    height: 100%;
    background-color: #efefef;

    @media (min-width: #{$breakpoint3}) {
        padding-left: map.get($spacings, 7) * 2;
    }
}

footer {
    position: relative;
    font-size: map.get($fontSizes, 1);
    letter-spacing: .1em;
    line-height: 18 / 8 * 1em;
    text-align: right;
    text-transform: uppercase;

    @media (min-width: #{$breakpoint1}) {
        font-size: map.get($fontSizes, 2);
    }

    @media (min-width: #{$breakpoint5}) {
        font-size: map.get($fontSizes, 3);
    }
}

h1, h2 {
    margin: 0;
    font-size: 26/16 * 1rem;
    line-height: 1.31;
    letter-spacing: .08em;
    font-weight: 400;
    text-transform: uppercase;

    @media (min-width: #{$breakpoint3}) {
        font-size: 6vh;
    }
}

a {
    color: $colorPrimary;
    text-transform: uppercase;
    text-decoration: none;

    &:active, &:hover {
        @extend .c-grad;

        .icon {
            fill: url(#grad);
            stroke: url(#grad);
        }
    }
}

button {
    border: 0;
    padding: .5em;
    -webkit-appearance: none;
    background-color: $colorPrimary;
    color: $colorPrimaryInverted;
    font: inherit;
    letter-spacing: inherit;
    text-transform: uppercase;
    cursor: pointer;
    transition: opacity .25s ease-in-out;

    &:active, &:hover {
        @extend .bgc-grad;
    }

    &.outline {
        background: transparent;
        color: inherit;
        padding: 0;
        font-size: map.get($fontSizes, 6);

        .icon {
            @media (min-width: #{$breakpoint3}) {
                font-size: map.get($fontSizes, 7);
            }
        }

        &:active, &:hover {
            @extend .c-grad;

            .icon {
                fill: url(#grad);
                stroke: url(#grad);
            }
        }
    }

    &:disabled {
        opacity: .4;
        filter: saturate(.2);
        animation: ease-in-out 3s loadingPulse infinite;
        pointer-events: none;
    }
}

label {
    margin-bottom: $lineHeight3 * -1em;
    text-transform: uppercase;

    small {
        @media (min-width: #{$breakpoint5}) {
            font-size: map.get($fontSizes, 3);
        }
    }
}

input, textarea {
    position: relative;
    margin-bottom: map.get($spacings, 5);
    border: solid;
    border-width: 0 0 2px;
    padding: 0;
    width: 100%;
    font: inherit;
    color: inherit;
    background: transparent;
    transition: background .15s ease-in-out;

    @media (min-width: #{$breakpoint3}) {
        border-bottom-width: 3px;
    }

    @media (min-width: #{$breakpoint5}) {
        margin-bottom: map.get($spacings, 7);
        border-bottom-width: 5px;
    }

    &:focus {
        outline: none;
        border-image: linear-gradient(to right, #{$colorTertiary} 25%,#{$colorSecondary} 75%) 1;
    }

    &:not(:placeholder-shown) {
        background: $colorPrimaryInverted;
    }

    &:-webkit-autofill {
        background: $colorPrimaryInverted;
    }
}

label, input, textarea {
    @media (min-width: #{$breakpoint5}) {
        font-size: map.get($fontSizes, 6);
    }
}

textarea {
    resize: none;
}

small {
    font-size: map.get($fontSizes, 2);
    letter-spacing: .1em;

    @media (min-width: #{$breakpoint5}) {
        font-size: map.get($fontSizes, 3);
    }
}

ul, ol {
    margin: 0;
    padding: 0;
    list-style: none;
}

.content {
    position: relative;
    flex-grow: 1;
    display: flex;
    flex-flow: column;

    @media (min-width: #{$breakpoint3}) {
        z-index: 1;
        display: flex;
        flex-flow: row-reverse;
    }
}

.logo-wrapper {
    overflow: hidden;
    flex-grow: 1;
    position: relative;
    display: none;
    flex-flow: column;
    height: 72px;
    
    @media (min-width: #{$breakpoint3}) {
        margin-top: calc(24.5vh - #{map.get($spacings, 6)});
        padding: map.get($spacings, 3) 0;
        width: 60%;
        height: 45vh;
    }
    
    @media (orientation: landscape) and (min-height: #{$breakpoint1}) {
        margin-top: calc(14.5vh - #{map.get($spacings, 3)});
        padding: 10vh 0;
    }
}

.contact-col {
    @media (min-width: #{$breakpoint3}) {
        flex-grow: 1;
        display: flex;
        flex-flow: column;
        justify-content: space-evenly;
    }

    &__cta {
        display: none;
        margin-top: -.2em;
        margin-left: map.get($spacings, 4);
        max-width: 20ch;

        @media (min-width: #{$breakpoint1}) {
            display: block;
        }
    }
}

.icon {
    display: inline-block;
    width: 1em;
    height: 1em;
    vertical-align: middle;
    fill: currentColor;
    stroke: currentColor;
}

.icon-logomark {
    display: block;
    width: 100%;
    stroke: none;

    &--canvas {
        position: absolute;
        top: -30%;
        left: 0;
        height: 160%;
        animation: 10s canvasSteppedShake infinite;
        animation-timing-function: steps(1);
    }

    &--svg {
        flex-grow: 1;
        height: 100%;
    }
}

.icon-logotype {
    box-sizing: border-box;
    position: absolute;
    top: 50%;
    left: 50%;
    display: block;
    width: 1em;
    height: 1em;
    font-size: 112.5vw;
    line-height: .2;
    color: $colorPrimaryInverted;
    border-radius: 50%;
    transform: translate(-50%, -50%);

    @media (orientation: landscape) {
        font-size: 112.5vh;
    }

    .icon {
        height: 100%;
        width: 100%;
        opacity: 0;
        animation: .8s rippleLogo .6s forwards, .4s fadeIn .6s forwards;
        animation-timing-function: cubic-bezier(.65, .43, .67, 1.53);
        stroke: none;
    }

    &__circle {
        transform-origin: center bottom;
        animation: ease-out 2.5s rippleLogoInner .6s forwards;
    }
}

.subtitle {
    max-width: 250px;

    @media (min-width: #{$breakpoint3}) {
        max-width: 25vw;
    }
}

.topline {
    transform: translateY(#{($lineHeight3 - 1%) * 100});

    &__item {
        position: relative;
        top: (1em - $lineHeight3);
        vertical-align: top;
    }
}

.grecaptcha-wrapper {
    display: none;

    & + div {
        bottom: 0!important;
        overflow: auto!important;

        & > div:first-child {
            position: absolute!important;
        }
    }
}
